swagger: '2.0'
info:
  title: Bank Argent API documentation
  description: Contains all available API endpoints in this codebase
  version: '1.0.0'
  termsOfService: 'http://swagger.io/terms/'
host: localhost:3001
basePath: /api/v1
schemes:
  - http
paths:
  /user/login:
    post:
      tags:
        - User Module
      summary: Login
      description: API for Login
      parameters:
        - in: body
          name: body
          description: Login Payload
          required: true
          schema:
            $ref: '#/definitions/Login'
      produces:
        - application/json
      responses:
        '200':
          description: Login Successfully
          schema:
            $ref: '#/definitions/LoginResponse'
        '400':
          description: Invalid Fields
        '500':
          description: Internal Server Error
  /user/signup:
    post:
      tags:
        - User Module
      summary: Signup
      description: API for Signup
      parameters:
        - in: body
          name: body
          description: Signup Payload
          required: true
          schema:
            $ref: '#/definitions/User'
      produces:
        - application/json
      responses:
        '200':
          description: Signup Successfully
          schema:
            $ref: '#/definitions/ApiResponse'
        '400':
          description: Invalid Fields
        '500':
          description: Internal Server Error
  /user/profile:
    post:
      security:
        - Bearer: []
      tags:
        - User Module
      summary: User Profile API
      description: API for fetching a user profile
      #produces:
       # - application/json
      responses:
        '200':
          description: User profile retrieved successully
          schema:
            $ref: '#/definitions/ApiResponse'
        '400':
          description: Invalid Fields
        '500':
          description: Internal Server Error
    put:
      security:
        - Bearer: []
      tags:
        - User Module
      summary: User Profile API
      description: API for updating a user profile
      parameters:
        - in: body
          name: body
          description: Update user profile attributes
          required: true
          schema:
            $ref: '#/definitions/UserProfile'
      produces:
        - application/json
      responses:
        '200':
          description: User profile retrieved successully
          schema:
            $ref: '#/definitions/ApiResponse'
        '400':
          description: Invalid Fields
        '500':
          description: Internal Server Error
 #Ajout des endpoints         
  /accounts/{accounts_id}:
    get:
      security:
        - Bearer: []
      tags:
        - Banking Module
      summary: User's accounts transaction API
      description: API for fetching a list of a specific account
      parameters:
         - in: path
           name: id
           type: integer
           required: true 
           description: accounts_id
      produces:
        - application/json
      responses: 
        '200':
          description: Transaction retrieved successully
          schema:
            $ref: '#definitions/Account'
        '400':
          description: Invalid Fields
        '500':
          description: Internal Server Error
  /{accounts_id}/transactions/{transaction_id}/infos:
    put:
      security:
        - Bearer: []
      tags:
        - Banking Module
      summary: update info transaction string
      description: API to update info
      parameters:
        - in: path
          name: id
          type: integer
          required: true
          description: transaction_id
        - in: body
          name: body
          description: Update transaction attributes
          required: true
          schema:
            $ref: '#definitions/TransactionDetailUpdate'
      responses:
        '200':
          description: infos transaction  updated successully
          schema:
            $ref: '#definitions/Transaction'
        '400':
          description: Invalid Fields
        '500':
          description: Internal Server Error
  /{accounts_id}/transactions/{transaction_id}:
    get:
      security:
        - Bearer: []
      tags:
        - Banking Module
      summary: Transaction edit API
      description: API for editing note and categories of transaction
      parameters:
        #$ref: '#/parameters/TransactionIDParam'
        - in: path
          name: id
          type: integer
          required: true
          description: transaction_id
          schema:
            $ref: '#/definitions/TransactionDetailUpdate'
      produces:
        - application/json
      responses:
        '200':
          description: Transaction details updated successully
          schema:
            $ref: '#definitions/Transaction'
        '400':
          description: Invalid Fields
        '500':
          description: Internal Server Error
# Fin de l'ajout
securityDefinitions:
  Bearer:
    type: apiKey
    name: Authorization
    in: header
#Ajout des param√®tres
parameters:
  AccountIDParam:
    name: accounts_id
    in: path 
    description: Unique identifier used to identify the account ressource
    required: true
    type: string
  TransactionIDParam:
    name: transaction_id
    in: path
    description: Unique identifier used to identify the transaction ressource
    required: true
    type: string 
#Fin de l'ajout
definitions:
  User:
    properties:
      email:
        type: string
        description: user email
      password:
        type: string
        description: user password
      firstName:
        type: string
        description: user first name
      lastName:
        type: string
        description: user last name
      userName:
        type: string
        description: user public name
  Login:
    properties:
      email:
        type: string
        description: user email
      password:
        type: string
        description: user password
  ApiResponse:
    type: object
    properties:
      status:
        type: integer
      message:
        type: string
      body:
        type: object
        properties:
          id:
            type: string
          email:
            type: string
  LoginResponse:
    type: object
    properties:
      token:
        type: string
  UserProfile:
    type: object
    properties:
      userName:
        type: string
  infosValues:
    type: object
    properties:
      name:
        type: string
      group:
        type: string
    required:
      - name
  UserCategoriesResponse:
    type: object
    properties:
      status: 
        type: integer
      message:
        type: string
      body:
        type: array
        items:
          type: object
          properties:
            id:
              type: integer
            name:
              type: string
            group:
              type: string
  Transaction:
    type: object
    properties:
      id:
        type: integer
      date:
        type: string
      description:
        type: string
      amount:
        type: number
      currency:
        type: string
      type:
        type: string
      category:
        type: string
      note:
        type: string
  TransactionList:
    type: array
    items:
      type: object
      properties:
        id:
          type: integer
        date:
          type: string
        description:
          type: string
        amount:
          type: number
        currency:
          type: string
        type:
          type: string
        category:
          type: string
        note:
          type: string
  TransactionResponse:
    type: object
    properties:
      status:
        type: integer
        description: Result of the request
    message:
      type: string
      description: Additional information about the result
    body:
      type: object
      properties:
        time-span:
          type: object
          properties:
            start-date:
              type: string
              format: date-time
              description: Start date of the time span
            end-date:
              type: string
              format: date-time
              description: End date of the time span
      data:
        type: object
        properties:
          transaction:
            type: array
            items:
              $ref: '#/definitions/Transaction'
    required:
      - status
      - message
      - body
  Account:
    type: array
    items:
      type: object
      properties:
        id:
          type: integer
          description: Account ID
        name:
          type: string
          description: Account name
        balance:
          type: number
          description: Account balance
        currency:
          type: string
  Balance:
    type: object
    properties:
      account-id:
        $ref: '#/definitions/Account'
      amount:
        $ref: '#definitions/AmountAndCurrency'
      dateTime:
        description: Date and time of the balance amount record
        type: string
        format: date-time
      balanceType:
        description: 'Type of the balance'
        type: string
        enum:
          - Available Balance
          - Current Balance
  AmountAndCurrency:
    type: object
    properties:
      amount:
        $ref: '#definitions/Amount'
    required:
      - amount
      - currency
    additionalProperties: false
  Currency:
    type: string
    pattern: '^\d{A-Z}\.\d{1,5}$'
  Amount:
    type: string
    pattern: '^\d{1,13}\.\d{1,5}$'
  TransactionDetailUpdate:
    type: object
    properties:
      note:
        type: string
      category:
        type: string

      
